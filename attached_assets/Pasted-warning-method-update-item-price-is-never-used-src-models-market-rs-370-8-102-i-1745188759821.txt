warning: method `update_item_price` is never used
   --> src/models/market.rs:370:8
    |
102 | impl Market {
    | ----------- method in this implementation
...
370 |     fn update_item_price(&mut self, item_name: &str) {
    |        ^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: field `tx_network` is never read
  --> src/ui/app.rs:31:5
   |
29 | pub struct App {
   |            --- field in this struct
30 |     game: Arc<Mutex<Game>>,
31 |     tx_network: mpsc::Sender<Message>,
   |     ^^^^^^^^^^

warning: method `send_navigation_request` is never used
   --> src/ui/app.rs:189:8
    |
36  | impl App {
    | -------- method in this implementation
...
189 |     fn send_navigation_request(&self, destination: &str) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: field `current_market` is never read
  --> src/network/client.rs:25:5
   |
18 | pub struct GameClient {
   |            ---------- field in this struct
...
25 |     current_market: Option<Market>,
   |     ^^^^^^^^^^^^^^

warning: fields `id` and `addr` are never read
  --> src/network/server.rs:19:5
   |
18 | struct ClientConnection {
   |        ---------------- fields in this struct
19 |     id: Uuid,
   |     ^^
20 |     username: String,
21 |     addr: SocketAddr,
   |     ^^^^

warning: field `config` is never read
  --> src/network/server.rs:31:5
   |
27 | pub struct GameServer {
   |            ---------- field in this struct
...
31 |     config: GameConfig,
   |     ^^^^^^

warning: `space_trader` (lib) generated 6 warnings
warning: constant `ENERGY` is never used
  --> src/ui/colors.rs:16:11
   |
16 | pub const ENERGY: Color = Color::Rgb(130, 60, 255);       // #823CFF (pu...
   |           ^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `SHIELD` is never used
  --> src/ui/colors.rs:17:11
   |
17 | pub const SHIELD: Color = Color::Rgb(60, 170, 255);       // #3CAAFF (sh...
   |           ^^^^^^

warning: constant `HULL` is never used
  --> src/ui/colors.rs:18:11
   |
18 | pub const HULL: Color = Color::Rgb(180, 180, 180);        // #B4B4B4 (hu...
   |           ^^^^

warning: constant `STARS_BG` is never used
  --> src/ui/colors.rs:19:11
   |
19 | pub const STARS_BG: Color = Color::Rgb(5, 10, 25);        // #050A19 (de...
   |           ^^^^^^^^

warning: function `create_status_bar` is never used
   --> src/ui/screens/style_utils.rs:106:8
    |
106 | pub fn create_status_bar(title: &str) -> Block {
    |        ^^^^^^^^^^^^^^^^^

warning: function `format_menu_option` is never used
   --> src/ui/screens/style_utils.rs:114:8
    |
114 | pub fn format_menu_option(key: char, label: &str, is_selected: bool) ->...
    |        ^^^^^^^^^^^^^^^^^^

warning: function `create_gauge_text` is never used
   --> src/ui/screens/style_utils.rs:130:8
    |
130 | pub fn create_gauge_text(label: &str, current: u32, max: u32, color: Co...
    |        ^^^^^^^^^^^^^^^^^

warning: method `index` is never used
  --> src/ui/screens/character_info.rs:22:12
   |
21 | impl CharacterInfoTab {
   | --------------------- method in this implementation
22 |     pub fn index(&self) -> usize {
   |            ^^^^^

warning: function `draw_menu` is never used
  --> src/ui/widgets/menu.rs:12:8
   |
12 | pub fn draw_menu<B: Backend>(
   |        ^^^^^^^^^

warning: function `get_station_art` is never used
  --> src/ui/ascii_art.rs:62:8
   |
62 | pub fn get_station_art() -> String {
   |        ^^^^^^^^^^^^^^^

warning: struct `App` is never constructed
  --> src/ui/app.rs:29:12
   |
29 | pub struct App {
   |            ^^^

warning: associated items `new`, `run`, `check_network_messages`, and `send_navigation_request` are never used
   --> src/ui/app.rs:37:12
    |
36  | impl App {
    | -------- associated items in this implementation
37  |     pub fn new(
    |            ^^^
...
50  |     pub fn run(&mut self) -> Result<(), io::Error> {
    |            ^^^
...
158 |     fn check_network_messages(&mut self) {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
189 |     fn send_navigation_request(&self, destination: &str) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `advance_storyline` and `set_storyline` are never used
  --> src/models/player.rs:29:12
   |
19 | impl Character {
   | -------------- methods in this implementation
...
29 |     pub fn advance_storyline(&mut self) -> bool {
   |            ^^^^^^^^^^^^^^^^^
...
45 |     pub fn set_storyline(&mut self, storyline: Storyline) -> bool {
   |            ^^^^^^^^^^^^^

warning: method `update_skills` is never used
   --> src/models/player.rs:130:12
    |
69  | impl Player {
    | ----------- method in this implementation
...
130 |     pub fn update_skills(&mut self) {
    |            ^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src/models/ship.rs:108:12
    |
47  | impl Ship {
    | --------- methods in this implementation
...
108 |     pub fn repair(&mut self, amount: u32) {
    |            ^^^^^^
...
112 |     pub fn recharge_shield(&mut self, amount: u32) {
    |            ^^^^^^^^^^^^^^^
...
116 |     pub fn take_damage(&mut self, amount: u32) -> bool {
    |            ^^^^^^^^^^^
...
137 |     pub fn get_cargo_space_available(&self) -> u32 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
144 |     pub fn get_total_specialized_cargo(&self) -> u32 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
150 |     pub fn get_capacity_for_resource(&self, resource_type: &ResourceTyp...
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
161 |     pub fn get_specialized_cargo_info(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
174 |     pub fn calculate_fuel_for_distance(&self, distance: f32) -> u32 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
179 |     pub fn has_fuel_for_jump(&self, distance: f32) -> bool {
    |            ^^^^^^^^^^^^^^^^^
...
185 |     pub fn consume_fuel_for_jump(&mut self, distance: f32) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
197 |     pub fn refuel(&mut self, amount: u32) -> u32 {
    |            ^^^^^^
...
204 |     pub fn get_fuel_percentage(&self) -> f32 {
    |            ^^^^^^^^^^^^^^^^^^^
...
209 |     pub fn get_max_range_with_current_fuel(&self) -> f32 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
214 |     pub fn get_fuel_status(&self) -> String {
    |            ^^^^^^^^^^^^^^^

warning: method `danger_level` is never used
  --> src/models/universe.rs:84:12
   |
20 | impl ResourceFieldType {
   | ---------------------- method in this implementation
...
84 |     pub fn danger_level(&self) -> u8 {
   |            ^^^^^^^^^^^^

warning: method `get_systems_count` is never used
   --> src/models/universe.rs:482:12
    |
213 | impl Universe {
    | ------------- method in this implementation
...
482 |     pub fn get_systems_count(&self) -> usize {
    |            ^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/models/market.rs:103:12
    |
102 | impl Market {
    | ----------- associated items in this implementation
103 |     pub fn new(system_id: &str) -> Self {
    |            ^^^
...
115 |     pub fn with_market_type(system_id: &str, market_type: MarketType) -...
    |            ^^^^^^^^^^^^^^^^
...
133 |     pub fn add_item(&mut self, item: Item, quantity: u32, base_price: u...
    |            ^^^^^^^^
...
216 |     pub fn buy_item(&mut self, item_name: &str, quantity: u32) -> Optio...
    |            ^^^^^^^^
...
290 |     pub fn sell_item(&mut self, item: Item, quantity: u32) -> u32 {
    |            ^^^^^^^^^
...
370 |     fn update_item_price(&mut self, item_name: &str) {
    |        ^^^^^^^^^^^^^^^^^
...
410 |     pub fn update_market(&mut self, game_time: u64) {
    |            ^^^^^^^^^^^^^
...
565 |     fn apply_economic_event(&mut self, event: &EconomicEvent) {
    |        ^^^^^^^^^^^^^^^^^^^^
...
642 |     fn generate_random_event(&mut self) {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
680 |     pub fn get_price_trend(&self, item_name: &str) -> Option<(f32, Stri...
    |            ^^^^^^^^^^^^^^^
...
794 |     pub fn get_player_orders(&self, player_id: &str) -> Vec<&TradeOrder> {
    |            ^^^^^^^^^^^^^^^^^
...
801 |     pub fn process_orders(&mut self, player_inventory: &mut HashMap<Ite...
    |            ^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/models/item.rs:34:12
   |
33 | impl Item {
   | --------- associated function in this implementation
34 |     pub fn new(name: &str, value: u32, weight: u32, item_type: ItemType)...
   |            ^^^

warning: constant `SKILL_POINTS_PER_SECOND` is never used
 --> src/models/skills.rs:4:7
  |
4 | const SKILL_POINTS_PER_SECOND: f32 = 0.1; // Base rate for skill point ac...
  |       ^^^^^^^^^^^^^^^^^^^^^^^

warning: method `description` is never used
  --> src/models/skills.rs:29:12
   |
17 | impl SkillCategory {
   | ------------------ method in this implementation
...
29 |     pub fn description(&self) -> String {
   |            ^^^^^^^^^^^

warning: multiple methods are never used
   --> src/models/skills.rs:61:12
    |
50  | impl Skill {
    | ---------- methods in this implementation
...
61  |     pub fn activate(&mut self) -> bool {
    |            ^^^^^^^^
...
71  |     pub fn deactivate(&mut self) -> bool {
    |            ^^^^^^^^^^
...
80  |     pub fn update(&mut self, current_time: f64) {
    |            ^^^^^^
...
127 |     pub fn get_efficiency_bonus(&self) -> f32 {
    |            ^^^^^^^^^^^^^^^^^^^^
...
132 |     pub fn get_time_reduction(&self) -> f32 {
    |            ^^^^^^^^^^^^^^^^^^
...
137 |     pub fn get_quality_bonus(&self) -> f32 {
    |            ^^^^^^^^^^^^^^^^^
...
159 |     pub fn get_level_progress(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^

warning: methods `update_all`, `activate_skill`, `deactivate_skill`, `meets_mining_requirement`, and `get_mining_progress` are never used
   --> src/models/skills.rs:207:12
    |
184 | impl SkillSet {
    | ------------- methods in this implementation
...
207 |     pub fn update_all(&mut self) {
    |            ^^^^^^^^^^
...
214 |     pub fn activate_skill(&mut self, category: &SkillCategory) -> bool {
    |            ^^^^^^^^^^^^^^
...
222 |     pub fn deactivate_skill(&mut self, category: &SkillCategory) -> bool {
    |            ^^^^^^^^^^^^^^^^
...
249 |     pub fn meets_mining_requirement(&self, required_level: u8) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
254 |     pub fn get_mining_progress(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^

warning: method `to_string` is never used
  --> src/models/blueprint.rs:18:12
   |
17 | impl BlueprintCategory {
   | ---------------------- method in this implementation
18 |     pub fn to_string(&self) -> String {
   |            ^^^^^^^^^

warning: multiple associated items are never used
   --> src/models/blueprint.rs:65:12
    |
64  | impl Blueprint {
    | -------------- associated items in this implementation
65  |     pub fn new(
    |            ^^^
...
103 |     pub fn start_research(&mut self) -> bool {
    |            ^^^^^^^^^^^^^^
...
113 |     pub fn update_research(&mut self, research_skill: &Skill) -> bool {
    |            ^^^^^^^^^^^^^^^
...
145 |     pub fn get_research_progress_percentage(&self) -> f32 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
153 |     pub fn improve_quality(&mut self) -> bool {
    |            ^^^^^^^^^^^^^^^
...
172 |     pub fn get_crafting_time(&self, engineering_skill: &Skill) -> Durat...
    |            ^^^^^^^^^^^^^^^^^
...
183 |     pub fn create_copy(&self) -> Option<Self> {
    |            ^^^^^^^^^^^
...
220 |     pub fn use_blueprint(&mut self) -> bool {
    |            ^^^^^^^^^^^^^

warning: methods `add_blueprint`, `get_blueprint`, `get_blueprint_mut`, `remove_blueprint`, and `update_research` are never used
   --> src/models/blueprint.rs:251:12
    |
244 | impl BlueprintLibrary {
    | --------------------- methods in this implementation
...
251 |     pub fn add_blueprint(&mut self, blueprint: Blueprint) {
    |            ^^^^^^^^^^^^^
...
255 |     pub fn get_blueprint(&self, id: &str) -> Option<&Blueprint> {
    |            ^^^^^^^^^^^^^
...
259 |     pub fn get_blueprint_mut(&mut self, id: &str) -> Option<&mut Bluepr...
    |            ^^^^^^^^^^^^^^^^^
...
263 |     pub fn remove_blueprint(&mut self, id: &str) -> bool {
    |            ^^^^^^^^^^^^^^^^
...
272 |     pub fn update_research(&mut self, research_skill: &Skill) {
    |            ^^^^^^^^^^^^^^^

warning: method `description` is never used
  --> src/models/faction.rs:23:12
   |
13 | impl FactionType {
   | ---------------- method in this implementation
...
23 |     pub fn description(&self) -> String {
   |            ^^^^^^^^^^^

warning: associated items `new_with_background`, `advance`, and `get_progress_percentage` are never used
   --> src/models/faction.rs:104:12
    |
87  | impl Storyline {
    | -------------- associated items in this implementation
...
104 |     pub fn new_with_background(
    |            ^^^^^^^^^^^^^^^^^^^
...
126 |     pub fn advance(&mut self) -> bool {
    |            ^^^^^^^
...
139 |     pub fn get_progress_percentage(&self) -> f32 {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_storylines_for_faction` is never used
   --> src/models/faction.rs:148:8
    |
148 | pub fn get_storylines_for_faction(faction: &FactionType) -> Vec<Storyli...
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `is_traveling` and `get_remaining_travel_time` are never used
   --> src/systems/navigation.rs:96:12
    |
16  | impl NavigationSystem {
    | --------------------- methods in this implementation
...
96  |     pub fn is_traveling(&self) -> bool {
    |            ^^^^^^^^^^^^
...
100 |     pub fn get_remaining_travel_time(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src/systems/trading.rs:334:12
    |
25  | impl TradingSystem {
    | ------------------ methods in this implementation
...
334 |     pub fn get_order_tab_index(&self) -> usize {
    |            ^^^^^^^^^^^^^^^^^^^
...
338 |     pub fn next_order_tab(&mut self) {
    |            ^^^^^^^^^^^^^^
...
343 |     pub fn previous_order_tab(&mut self) {
    |            ^^^^^^^^^^^^^^^^^^
...
348 |     pub fn is_order_buy_mode(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^
...
352 |     pub fn toggle_order_type(&mut self) {
    |            ^^^^^^^^^^^^^^^^^
...
361 |     pub fn select_order(&mut self, index: usize) {
    |            ^^^^^^^^^^^^
...
394 |     pub fn get_selected_order(&self) -> Option<&TradeOrder> {
    |            ^^^^^^^^^^^^^^^^^^

warning: methods `update`, `add_resource_to_player`, `start_mining_operation`, `stop_mining`, and `select_resource` are never used
   --> src/systems/mining.rs:57:12
    |
35  | impl MiningSystem {
    | ----------------- methods in this implementation
...
57  |     pub fn update(&mut self, player: &mut Player, _time_system: &TimeSy...
    |            ^^^^^^
...
111 |     fn add_resource_to_player(&self, player: &mut Player, resource_name...
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
127 |     pub fn start_mining_operation(&mut self, player: &Player, field_ind...
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
198 |     pub fn stop_mining(&mut self) -> Option<String> {
    |            ^^^^^^^^^^^
...
292 |     pub fn select_resource(&mut self, resource_name: String) {
    |            ^^^^^^^^^^^^^^^

warning: method `select_blueprint` is never used
   --> src/systems/crafting.rs:118:12
    |
19  | impl CraftingSystem {
    | ------------------- method in this implementation
...
118 |     pub fn select_blueprint(&mut self, index: usize) {
    |            ^^^^^^^^^^^^^^^^

warning: methods `set_time_multiplier` and `get_time_multiplier` are never used
  --> src/systems/time.rs:38:12
   |
12 | impl TimeSystem {
   | --------------- methods in this implementation
...
38 |     pub fn set_time_multiplier(&mut self, multiplier: f32) {
   |            ^^^^^^^^^^^^^^^^^^^
...
42 |     pub fn get_time_multiplier(&self) -> f32 {
   |            ^^^^^^^^^^^^^^^^^^^

warning: constant `DEFAULT_SERVER_PORT` is never used
  --> src/network/protocol.rs:24:11
   |
24 | pub const DEFAULT_SERVER_PORT: u16 = 7890;
   |           ^^^^^^^^^^^^^^^^^^^

warning: constant `HEARTBEAT_INTERVAL` is never used
  --> src/network/protocol.rs:25:11
   |
25 | pub const HEARTBEAT_INTERVAL: Duration = Duration::from_secs(5);
   |           ^^^^^^^^^^^^^^^^^^

warning: constant `CONNECTION_TIMEOUT` is never used
  --> src/network/protocol.rs:26:11
   |
26 | pub const CONNECTION_TIMEOUT: Duration = Duration::from_secs(10);
   |           ^^^^^^^^^^^^^^^^^^

warning: struct `GameClient` is never constructed
  --> src/network/client.rs:18:12
   |
18 | pub struct GameClient {
   |            ^^^^^^^^^^

warning: multiple associated items are never used
   --> src/network/client.rs:32:12
    |
30  | impl GameClient {
    | --------------- associated items in this implementation
31  |     /// Create a new game client
32  |     pub fn new(username: String) -> Self {
    |            ^^^
...
49  |     pub async fn connect(&mut self, server_host: &str, port: Option<u16...
    |                  ^^^^^^^
...
184 |     pub async fn disconnect(&mut self) -> NetworkResult<()> {
    |                  ^^^^^^^^^^
...
208 |     pub async fn receive_message(&self) -> NetworkResult<Message> {
    |                  ^^^^^^^^^^^^^^^
...
230 |     pub async fn request_game_state(&self) -> NetworkResult<()> {
    |                  ^^^^^^^^^^^^^^^^^^
...
248 |     pub async fn navigate_to_system(&self, destination: String) -> Netw...
    |                  ^^^^^^^^^^^^^^^^^^
...
287 |     pub fn get_universe(&self) -> Option<&Universe> {
    |            ^^^^^^^^^^^^
...
292 |     pub fn get_player_ship(&self) -> Option<&Ship> {
    |            ^^^^^^^^^^^^^^^
...
297 |     pub fn is_connected(&self) -> bool {
    |            ^^^^^^^^^^^^

warning: struct `ClientConnection` is never constructed
  --> src/network/server.rs:18:8
   |
18 | struct ClientConnection {
   |        ^^^^^^^^^^^^^^^^

warning: struct `GameServer` is never constructed
  --> src/network/server.rs:27:12
   |
27 | pub struct GameServer {
   |            ^^^^^^^^^^

warning: associated items `new`, `start`, `handle_connection`, `process_message`, and `broadcast` are never used
   --> src/network/server.rs:36:18
    |
34  | impl GameServer {
    | --------------- associated items in this implementation
35  |     /// Create a new game server with optional password protection and ...
36  |     pub async fn new(password: Option<String>, game_state: Arc<Mutex<Ga...
    |                  ^^^
...
52  |     pub async fn start(&self, port: Option<u16>) -> NetworkResult<()> {
    |                  ^^^^^
...
112 |     async fn handle_connection(
    |              ^^^^^^^^^^^^^^^^^
...
242 |     async fn process_message(
    |              ^^^^^^^^^^^^^^^
...
463 |     pub async fn broadcast(&self, message: Message) -> NetworkResult<()> {
    |                  ^^^^^^^^^

warning: constant `CONNECTION_TIMEOUT` is never used
   --> src/network/server.rs:481:7
    |
481 | const CONNECTION_TIMEOUT: std::time::Duration = std::time::Duration::fr...
    |       ^^^^^^^^^^^^^^^^^^

warning: variants `ConnectionError`, `AuthError`, `SerializationError`, `ServerError`, `ClientError`, and `Timeout` are never constructed
  --> src/network/error.rs:10:5
   |
5  | pub enum NetworkError {
   |          ------------ variants in this enum
...
10 |     ConnectionError(String),
   |     ^^^^^^^^^^^^^^^
...
13 |     AuthError(String),
   |     ^^^^^^^^^
...
16 |     SerializationError(String),
   |     ^^^^^^^^^^^^^^^^^^
...
19 |     ServerError(String),
   |     ^^^^^^^^^^^
...
22 |     ClientError(String),
   |     ^^^^^^^^^^^
...
25 |     Timeout,
   |     ^^^^^^^
   |
   = note: `NetworkError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: type alias `NetworkResult` is never used
  --> src/network/error.rs:28:10
   |
28 | pub type NetworkResult<T> = Result<T, NetworkError>;
   |          ^^^^^^^^^^^^^

warning: `space_trader` (bin "space_trader") generated 45 warnings
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.42s
     Running `target/debug/space_trader`
 █████╗ ███████╗████████╗██████╗ 
██╔══██╗██╔════╝╚══██╔══╝██╔══██╗
███████║███████╗   ██║   ██████╔╝
██╔══██║╚════██║   ██║   ██╔══██╗
██║  ██║███████║   ██║   ██║  ██║
╚═╝  ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝
═══ SPACE TRADER CLIENT-SERVER ═══

Select mode:
1. Start SERVER
2. Start CLIENT
3. Start STANDALONE (legacy mode)
Enter choice (1-3): 